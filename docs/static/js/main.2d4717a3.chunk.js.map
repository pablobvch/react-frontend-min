{"version":3,"sources":["components/Navbar.jsx","components/ContainerPage.jsx","components/FocusableInput.jsx","pages/FocusableInputPage.jsx","components/Grocery.jsx","data/products.js","pages/GroceryPage.jsx","pages/HomePage.jsx","components/ImageGallery.jsx","data/heroes.js","pages/ImageGalleryPage.jsx","helpers/getLinks.js","components/ListItemsForNavigation.jsx","pages/ListItemsForNavigationPage.jsx","components/Message.jsx","pages/MessagePage.jsx","pages/NotFoundPage.jsx","components/PlayerStatus.jsx","pages/PlayerStatusPage.jsx","components/Rating.jsx","pages/RatingPage.jsx","data/teams.js","components/TeamsList.jsx","pages/TeamsListPage.jsx","router/AppRouter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","isActive","ContainerPage","title","children","Input","props","forwardedRef","otherProps","ref","TextInput","React","forwardRef","FocusableInput","focused","inputRef","useRef","useEffect","current","select","FocusableInputPage","useState","setFocused","onClick","handleClick","getProductsUpdated","prevProductsState","product","value","newPrevProductsState","foundIndex","findIndex","x","name","votes","Product","setProductsState","renderProducts","productsState","map","Grocery","products","PRODUCTS","GroceryPage","HomePage","Image","src","onRemove","alt","renderImages","links","length","link","index","stateLinks","setStateLinks","filteredLinksList","filter","stateLink","ImageGallery","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","ImageGalleryPage","heroe","itemsList","Array","fill","ListItemsForNavigation","selectedIndex","setSelectedIndex","activeItemRef","onKeyDown","event","keyCode","prevSelectedIndex","item","type","ListItemsForNavigationPage","Message","showParagraph","setShowParagraph","href","MessagePage","NotFoundPage","navigate","useNavigate","replace","handleOnClick","PlayerStatus","status","setStatus","counter","setCounter","prevCounter","PlayerStatusPage","starsArray","Rating","stars","setStars","n","prevStars","newStarts","i","RatingPage","TEAMS","players","games","score","city","reducerScore","accumulator","getTotalScore","reduce","renderTeams","teams","team","TeamsList","setTeams","sort","a","b","TeamsListPage","AppRouter","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d4717a3.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark p-2\">\r\n      <Link className=\"navbar-brand\" to=\"/home\">\r\n        Minutentag\r\n      </Link>\r\n\r\n      <div className=\"navbar-collapse\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/focusable\"\r\n          >\r\n            Focusable\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/grocery\"\r\n          >\r\n            Grocery\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/image-gallery\"\r\n          >\r\n            Image gallery\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/list-items\"\r\n          >\r\n            List Items\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/message\"\r\n          >\r\n            Message\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/player-status\"\r\n          >\r\n            Player Status\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/rating\"\r\n          >\r\n            Rating\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) => `nav-link ${isActive ? \"active\" : \"\"}`}\r\n            to=\"/teams-list\"\r\n          >\r\n            Teams List\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContainerPage = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      <hr />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","/**\n * The TextInput component renders an input element in the DOM\n * and accepts a ref that is forwarded to that input element.\n * Finish the FocusableInput component:\n * - The component should accept a focused prop.\n * - When the focused prop is changed from false to true, and the input is not focused, it should receive the focus.\n * - If on mounting the focused prop is true, the input should receive the focus.\n */\n\nimport React, { useEffect, useRef } from \"react\";\n\nfunction Input(props) {\n  const { forwardedRef, ...otherProps } = props;\n  return <input {...otherProps} ref={forwardedRef} />;\n}\n\nconst TextInput = React.forwardRef((props, ref) => {\n  return <Input {...props} forwardedRef={ref} />;\n});\n\n// Implement:\n// When the focused prop is changed from false to true,\n// and the input is not focused, it should receive focus.\n// If focused prop is true, the input should receive the focus.\nexport function FocusableInput({ focused = false }) {\n  const inputRef = useRef(null);\n  useEffect(() => focused && inputRef.current.select(), [focused, inputRef]);\n  return <TextInput ref={inputRef} />;\n}\n","import { useState } from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { FocusableInput } from \"../components/FocusableInput\";\r\n\r\nconst handleClick = (focused, setFocused) => {\r\n  setFocused(!focused);\r\n};\r\n\r\nexport const FocusableInputPage = () => {\r\n  const [focused, setFocused] = useState(false);\r\n  return (\r\n    <ContainerPage title={\"Focusable Input Page\"}>\r\n      <div>\r\n        {/* Comment and uncomment the focused prop to observe the behaviour */}\r\n        <FocusableInput focused={focused} />\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleClick(focused, setFocused)}\r\n        >\r\n          {`Set focus: ${focused}`}\r\n        </button>\r\n      </div>\r\n    </ContainerPage>\r\n  );\r\n};\r\n","/**\n * You have a Grocery component, which receives a list of products, each one with name and votes.\n * - The app should render an unordered list, with a list item for each product.\n * - Products can be upvoted or downvoted.\n * By appropriately using React state and props, implement the upvote/downvote logic. Keep the state in the topmost component, while the Product component should accept props.\n *\n * For example, passing the following array as products prop to Grocery\n * [{ name: \"Oranges\", votes: 0 }, { name: \"Bananas\", votes: 0 }]\n * and clicking the '+' button next to the Oranges should result in HTML like:\n *\n *   <ul>\n *     <li>\n *       <span>Oranges - votes: 1</span>\n *       <button>+</button>\n *       <button>-</button>\n *     </li>\n *     <li>\n *       <span>Bananas - votes: 0</span>\n *       <button>+</button>\n *       <button>-</button>\n *     </li>\n *   </ul>\n */\n\nimport { useState } from \"react\";\n\nconst getProductsUpdated = (prevProductsState, product, value) => {\n  const newPrevProductsState = [...prevProductsState];\n  const foundIndex = newPrevProductsState.findIndex(\n    (x) => x.name === product.name\n  );\n  newPrevProductsState[foundIndex] = {\n    name: product.name,\n    votes: newPrevProductsState[foundIndex].votes + value\n  };\n  return newPrevProductsState;\n};\n\nfunction Product({ product, setProductsState }) {\n  function handlePlus() {\n    // logic to vote a product\n    setProductsState((prevProductsState) =>\n      getProductsUpdated(prevProductsState, product, 1)\n    );\n  }\n\n  function handleMinus() {\n    // logic to unvote a product\n    setProductsState((prevProductsState) =>\n      getProductsUpdated(prevProductsState, product, -1)\n    );\n  }\n\n  return (\n    <li>\n      <span>\n        {product.name} - votes: {product.votes}\n      </span>\n      <button className=\"btn\" onClick={handlePlus}>\n        <span>+</span>\n      </button>\n      <button className=\"btn\" onClick={handleMinus}>\n        <span>-</span>\n      </button>\n    </li>\n  );\n}\n\nconst renderProducts = (productsState, setProductsState) =>\n  productsState.map((product) => (\n    <Product\n      key={product.name}\n      product={product}\n      setProductsState={setProductsState}\n    />\n  ));\n\nexport function Grocery({ products }) {\n  const [productsState, setProductsState] = useState(products);\n\n  return <ul>{renderProducts(productsState, setProductsState)}</ul>;\n}\n","export const PRODUCTS = [\r\n  { name: \"Oranges\", votes: 0 },\r\n  { name: \"Bananas\", votes: 0 },\r\n  { name: \"Apples\", votes: 0 },\r\n  { name: \"Carrots\", votes: 0 },\r\n  { name: \"Onions\", votes: 0 }\r\n];\r\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { Grocery } from \"../components/Grocery\";\r\nimport { PRODUCTS } from \"../data/products\";\r\n\r\nexport const GroceryPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Grocery Page\"}>\r\n      <Grocery products={PRODUCTS} />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <ContainerPage title={\"Home Page\"}>\r\n      <p>\r\n        Please visit the menu links to visualize every one of the components. If\r\n        you want, you can modify the URL to test the router. You'll be forwarded\r\n        to the Not Found Page if the route is not defined.\r\n      </p>\r\n    </ContainerPage>\r\n  );\r\n};\r\n","/**\n * Implement the ImageGallery component that accepts a `links`\n * prop and renders the gallery so that the first\n * item in the links prop is the src attribute of the first image in the gallery.\n\n * It should also implement the following logic:\n * - When the button is clicked, the image that is in the same div as the button should be removed from the gallery.\n */\nimport { useState } from \"react\";\n\nfunction Image({ src, onRemove }) {\n  return (\n    <div className=\"image\">\n      <img src={src} alt={`img from ${src}`} />\n      <button className=\"remove\" onClick={() => onRemove(src)}>\n        X\n      </button>\n    </div>\n  );\n}\n\nconst renderImages = (links, onRemove) =>\n  links.length > 0\n    ? links.map((link, index) => (\n        <Image key={index} src={link} onRemove={onRemove}></Image>\n      ))\n    : null;\n\nconst onRemove = (stateLinks, setStateLinks) => (link) => {\n  const filteredLinksList = stateLinks.filter(\n    (stateLink) => stateLink !== link\n  );\n  setStateLinks(filteredLinksList);\n};\n\nexport function ImageGallery({ links }) {\n  const [stateLinks, setStateLinks] = useState(links);\n\n  return (\n    <div>{renderImages(stateLinks, onRemove(stateLinks, setStateLinks))}</div>\n  );\n}\n","export const heroes = [\r\n  {\r\n    id: \"dc-batman\",\r\n    superhero: \"Batman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Bruce Wayne\",\r\n    first_appearance: \"Detective Comics #27\",\r\n    characters: \"Bruce Wayne\"\r\n  },\r\n  {\r\n    id: \"dc-superman\",\r\n    superhero: \"Superman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Kal-El\",\r\n    first_appearance: \"Action Comics #1\",\r\n    characters: \"Kal-El\"\r\n  },\r\n  {\r\n    id: \"dc-flash\",\r\n    superhero: \"Flash\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Jay Garrick\",\r\n    first_appearance: \"Flash Comics #1\",\r\n    characters: \"Jay Garrick, Barry Allen, Wally West, Bart Allen\"\r\n  },\r\n  {\r\n    id: \"dc-green\",\r\n    superhero: \"Green Lantern\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Alan Scott\",\r\n    first_appearance: \"All-American Comics #16\",\r\n    characters:\r\n      \"Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz\"\r\n  },\r\n  {\r\n    id: \"dc-arrow\",\r\n    superhero: \"Green Arrow\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Oliver Queen\",\r\n    first_appearance: \"More Fun Comics #73\",\r\n    characters: \"Oliver Queen\"\r\n  },\r\n  {\r\n    id: \"dc-wonder\",\r\n    superhero: \"Wonder Woman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Princess Diana\",\r\n    first_appearance: \"All Star Comics #8\",\r\n    characters: \"Princess Diana\"\r\n  },\r\n  {\r\n    id: \"dc-martian\",\r\n    superhero: \"Martian Manhunter\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"J'onn J'onzz\",\r\n    first_appearance: \"Detective Comics #225\",\r\n    characters: \"Martian Manhunter\"\r\n  },\r\n  {\r\n    id: \"dc-robin\",\r\n    superhero: \"Robin/Nightwing\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dick Grayson\",\r\n    first_appearance: \"Detective Comics #38\",\r\n    characters: \"Dick Grayson\"\r\n  },\r\n  {\r\n    id: \"dc-blue\",\r\n    superhero: \"Blue Beetle\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dan Garret\",\r\n    first_appearance: \"Mystery Men Comics #1\",\r\n    characters: \"Dan Garret, Ted Kord, Jaime Reyes\"\r\n  },\r\n  {\r\n    id: \"dc-black\",\r\n    superhero: \"Black Canary\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dinah Drake\",\r\n    first_appearance: \"Flash Comics #86\",\r\n    characters: \"Dinah Drake, Dinah Lance\"\r\n  },\r\n  {\r\n    id: \"marvel-spider\",\r\n    superhero: \"Spider Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Peter Parker\",\r\n    first_appearance: \"Amazing Fantasy #15\",\r\n    characters: \"Peter Parker\"\r\n  },\r\n  {\r\n    id: \"marvel-captain\",\r\n    superhero: \"Captain America\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Steve Rogers\",\r\n    first_appearance: \"Captain America Comics #1\",\r\n    characters: \"Steve Rogers\"\r\n  },\r\n  {\r\n    id: \"marvel-iron\",\r\n    superhero: \"Iron Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Tony Stark\",\r\n    first_appearance: \"Tales of Suspense #39\",\r\n    characters: \"Tony Stark\"\r\n  },\r\n  {\r\n    id: \"marvel-thor\",\r\n    superhero: \"Thor\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Thor Odinson\",\r\n    first_appearance: \"Journey into Myster #83\",\r\n    characters: \"Thor Odinson\"\r\n  },\r\n  {\r\n    id: \"marvel-hulk\",\r\n    superhero: \"Hulk\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Bruce Banner\",\r\n    first_appearance: \"The Incredible Hulk #1\",\r\n    characters: \"Bruce Banner\"\r\n  },\r\n  {\r\n    id: \"marvel-wolverine\",\r\n    superhero: \"Wolverine\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"James Howlett\",\r\n    first_appearance: \"The Incredible Hulk #180\",\r\n    characters: \"James Howlett\"\r\n  },\r\n  {\r\n    id: \"marvel-daredevil\",\r\n    superhero: \"Daredevil\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Matthew Michael Murdock\",\r\n    first_appearance: \"Daredevil #1\",\r\n    characters: \"Matthew Michael Murdock\"\r\n  },\r\n  {\r\n    id: \"marvel-hawkeye\",\r\n    superhero: \"Hawkeye\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Clinton Francis Barton\",\r\n    first_appearance: \"Tales of Suspense #57\",\r\n    characters: \"Clinton Francis Barton\"\r\n  },\r\n  {\r\n    id: \"marvel-cyclops\",\r\n    superhero: \"Cyclops\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Scott Summers\",\r\n    first_appearance: \"X-Men #1\",\r\n    characters: \"Scott Summers\"\r\n  },\r\n  {\r\n    id: \"marvel-silver\",\r\n    superhero: \"Silver Surfer\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Norrin Radd\",\r\n    first_appearance: \"The Fantastic Four #48\",\r\n    characters: \"Norrin Radd\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { ImageGallery } from \"../components/ImageGallery\";\r\nimport { getLinks } from \"../helpers/getLinks\";\r\n\r\nexport const ImageGalleryPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Image Gallery Page\"}>\r\n      <ImageGallery links={getLinks()} />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nconst getLinks = () => heroes.map((heroe) => `/assets/images/${heroe.id}.jpg`);\r\n\r\nexport { getLinks };\r\n","/**\n * Given a list of items implement a navigation through the keyboard, following these requirements:\n * - Navigate through the list with UP and RIGHT keys will focus the next item.\n * - Navigate through the list with DOWN and LEFT keys will focus the previous item.\n * - Only one item will be FOCUSED per time in the browser.\n *\n * Suggestion: you may to think in term of \"indexes\".\n * You may calculate the index and use it to select the item, then you will focus that item.\n *\n * NOTE: The keydown event will work once the <ul> receives the focus.\n */\n\nimport { useEffect, useRef, useState } from \"react\";\n\n// Simulating a list of items to render.\n// This can be passed through props as well. The constant is declared here for convenience\nconst itemsList = Array(10).fill({\n  /** Add the properties you consider, there are no specific requirements related to what you have to render. Be creative :) */\n});\n\nexport function ListItemsForNavigation(props) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const activeItemRef = useRef();\n\n  useEffect(() => {\n    // Focus the item using this effect\n    activeItemRef.current.select();\n  }, [\n    /* Use accordingly the dependencies */\n    selectedIndex\n  ]);\n\n  const handleKeyDown = (event) => {\n    // Add the proper logic to calculate the index that correspond to the item that should be focused.\n    if (event.keyCode === 39 || event.keyCode === 40) {\n      if (selectedIndex + 1 < 10) {\n        setSelectedIndex((prevSelectedIndex) => prevSelectedIndex + 1);\n      }\n      return;\n    }\n    if (event.keyCode === 37 || event.keyCode === 38) {\n      if (selectedIndex - 1 >= 0) {\n        setSelectedIndex((prevSelectedIndex) => prevSelectedIndex - 1);\n      }\n      return;\n    }\n  };\n\n  return (\n    <>\n      {itemsList.length > 0 ? (\n        <ul onKeyDown={handleKeyDown}>\n          {itemsList.map((item, index) => {\n            return (\n              <li key={index}>\n                <input\n                  type=\"text\"\n                  ref={index === selectedIndex ? activeItemRef : null}\n                ></input>\n              </li>\n            );\n          })}\n        </ul>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { ListItemsForNavigation } from \"../components/ListItemsForNavigation\";\r\n\r\nexport const ListItemsForNavigationPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Image Gallery Page\"}>\r\n      <ListItemsForNavigation />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","/*\n * The Message component contains an anchor element and\n * a paragraph below the anchor. Rendering of the paragraph\n * should be toggled by clicking on the anchor element\n * using the following logic:\n *\n * - At the start, the paragraph should not be rendered.\n * - After a click, the paragraph should be rendered.\n * - After another click, the paragraph should not be rendered.\n * - Finish the Message component by implementing this logic.\n */\n\nimport { useState } from \"react\";\n\nexport function Message() {\n  const [showParagraph, setShowParagraph] = useState(false);\n  return (\n    <>\n      <a\n        href=\"/message#\"\n        onClick={() => {\n          setShowParagraph(!showParagraph);\n        }}\n      >\n        {\" \"}\n        Want to buy a new car?\n      </a>\n      {showParagraph && <p>Call +11 22 33 44 now!</p>}\n    </>\n  );\n}\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { Message } from \"../components/Message\";\r\n\r\nexport const MessagePage = () => {\r\n  return (\r\n    <ContainerPage title={\"Image Gallery Page\"}>\r\n      <Message />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\n\r\nconst handleOnClick = (navigate) => {\r\n  navigate(\"/home\", {\r\n    replace: true\r\n  });\r\n};\r\n\r\nexport const NotFoundPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ContainerPage title={\"Not Found Page\"}>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => {\r\n          handleOnClick(navigate);\r\n        }}\r\n      >\r\n        Return to Home Page\r\n      </button>\r\n    </ContainerPage>\r\n  );\r\n};\r\n","/**\n * Finish the PlayerStatus component so that it follows the current status of the player.\n * - The status can be either \"online\" or \"away\".\n * - When the component first renders, the player should be \"online\".\n * - The toggleStatus function should change the status variable.\n * - The component should count how many times the user changed their status, using the counter.\n * - When the component first renders, the counter should be 1.\n * - The counter should be updated within useEffect when status changes.\n *\n * For example, after the first render, the div element with id root should look like this:\n *\n *   <div>\n *     <h1>Online</h1>\n *     <h3>1</h3>\n *     <button>Toggle status</button>\n *   </div>\n */\n\nimport { useEffect, useState } from \"react\";\n\nexport function PlayerStatus() {\n  const [status, setStatus] = useState(\"Online\");\n  const [counter, setCounter] = useState(0);\n\n  // Toggle between the two status values - 'Away' and 'Online'\n  function onToggleStatus() {\n    // Write your code here\n    setStatus(status === \"Online\" ? \"Away\" : \"Online\");\n  }\n\n  // Implement effect hook below.\n  // Update the counter when status changes.\n  useEffect(() => {\n    setCounter((prevCounter) => prevCounter + 1);\n  }, [status]);\n\n  return (\n    <div>\n      <h1>{`Status: ${status}`}</h1>\n      <h3>{`Counter: ${counter}`}</h3>\n      <button onClick={() => onToggleStatus()}>Toggle status</button>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { PlayerStatus } from \"../components/PlayerStatus\";\r\n\r\nexport const PlayerStatusPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Player Status Page\"}>\r\n      <PlayerStatus />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","/**\n * The Rating component consists in a container with 5 stars.\n * Each star is represented by a <span /> element.\n * The component should render to this HTML code:\n *\n *  <div id='rating'>\n *\t\t<span>*</span>\n *\t\t<span>*</span>\n *\t\t<span>*</span>\n *\t\t<span>*</span>\n *\t\t<span>*</span>\n *\t</div>\n *\n * When an <span /> element is clicked, the active class should be added to that <span /> and to ALL <span /> before it.\n * Also, the active class should be removed from all span elements after it, if there are any.\n * For example, after the third span element has been clicked, the HTML code should look like this:\n *\n * <div id='rating'>\n *  <span class=\"active\">*</span>\n *  <span class=\"active\">*</span>\n *  <span class=\"active\">*</span>\n *  <span>*</span>\n *  <span>*</span>\n * </div>\n */\n\nimport { useState } from \"react\";\n\nconst starsArray = [0, 1, 2, 3, 4];\n\nexport function Rating() {\n  const [stars, setStars] = useState([0, 0, 0, 0, 0]);\n\n  const handleClick = (n) => {\n    setStars((prevStars) => {\n      const newStarts = [...prevStars];\n      for (let i = 0; i <= newStarts.length - 1; i++) {\n        if (i <= n) {\n          newStarts[i] = 1;\n        } else {\n          newStarts[i] = 0;\n        }\n      }\n      return newStarts;\n    });\n  };\n\n  return (\n    <div id=\"rating\">\n      {starsArray.map((n) => (\n        <span\n          key={n}\n          className={`span-star ${stars[n] !== 0 ? \"span-bold\" : \"\"}`}\n          onClick={() => handleClick(n)}\n        >\n          *\n        </span>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { Rating } from \"../components/Rating\";\r\n\r\nexport const RatingPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Rating Page\"}>\r\n      <Rating />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","export const TEAMS = [\r\n  {\r\n    name: \"Red\",\r\n    players: [\"Robin\", \"Rey\", \"Roger\", \"Richard\"],\r\n    games: [\r\n      {\r\n        score: 10,\r\n        city: \"LA\"\r\n      },\r\n      {\r\n        score: 1,\r\n        city: \"NJ\"\r\n      },\r\n      {\r\n        score: 3,\r\n        city: \"NY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"Blue\",\r\n    players: [\"Bob\", \"Ben\"],\r\n    games: [\r\n      {\r\n        score: 6,\r\n        city: \"CA\"\r\n      },\r\n      {\r\n        score: 3,\r\n        city: \"LA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"Yellow\",\r\n    players: [\"Yesmin\", \"Yuliana\", \"Yosemite\"],\r\n    games: [\r\n      {\r\n        score: 2,\r\n        city: \"NY\"\r\n      },\r\n      {\r\n        score: 4,\r\n        city: \"LA\"\r\n      },\r\n      {\r\n        score: 7,\r\n        city: \"AK\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n","/**\n * Given a list of teams, we need to expose the teams in different ways:\n * - Criteria 1: depending on the score, order the list from highest to lowest.\n * - Criteria 2: depending on the score, order the list from lowest to highest.\n * - Criteria 3: depending on the player's quantity, show ONLY the teams that has more than 3 players.\n *\n * What you need to implement is:\n * - 3 buttons. Each of them need to execute a criteria.\n * - The list of teams should be updated dynamically depending on the selected filter.\n * - Each team item should display: Team Name / Player’s quantity / Total Score of each team.\n */\n\nimport { useState } from \"react\";\nimport { TEAMS } from \"../data/teams\";\n\nconst quantityFilteredPlayers = 3;\n\nconst reducerScore = (accumulator, current) => accumulator + current.score;\n\nconst getTotalScore = (games) => games.reduce(reducerScore, 0);\n\nconst renderTeams = (teams) =>\n  teams.map((team) => (\n    <li key={team.name}>{`${team.name} - ${\n      team.players.length\n    } - ${getTotalScore(team.games)}`}</li>\n  ));\n\nexport function TeamsList() {\n  const [teams, setTeams] = useState(TEAMS);\n\n  // Order teams by score (highest to lowest)\n  function orderTeamByScoreHighestToLowest() {\n    // Write your code here\n    setTeams(\n      [...teams].sort((a, b) => getTotalScore(b.games) - getTotalScore(a.games))\n    );\n  }\n\n  // Order teams by score (lowest to highest)\n  function orderTeamByScoreLowestToHighest() {\n    // Write your code here\n    setTeams(\n      [...teams].sort((a, b) => getTotalScore(a.games) - getTotalScore(b.games))\n    );\n  }\n\n  // Filtering teams that with at least 3 players\n  function teamsWithMoreThanThreePlayers() {\n    // Write your code here\n    setTeams(\n      teams.filter((team) => team.players.length >= quantityFilteredPlayers)\n    );\n  }\n\n  return (\n    <div>\n      <button onClick={() => setTeams(TEAMS)}>Initial list</button>\n\n      <button onClick={() => orderTeamByScoreHighestToLowest()}>\n        Highest to Lowest\n      </button>\n\n      <button onClick={() => orderTeamByScoreLowestToHighest()}>\n        Lowest to Highest\n      </button>\n\n      <button onClick={() => teamsWithMoreThanThreePlayers()}>\n        Teams with at least 3 players\n      </button>\n\n      <ul className=\"teams\">{renderTeams(teams)}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { ContainerPage } from \"../components/ContainerPage\";\r\nimport { TeamsList } from \"../components/TeamsList\";\r\n\r\nexport const TeamsListPage = () => {\r\n  return (\r\n    <ContainerPage title={\"Teams List Page\"}>\r\n      <TeamsList />\r\n    </ContainerPage>\r\n  );\r\n};\r\n","import { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport { FocusableInputPage } from \"../pages/FocusableInputPage\";\r\nimport { GroceryPage } from \"../pages/GroceryPage\";\r\nimport { HomePage } from \"../pages/HomePage\";\r\nimport { ImageGalleryPage } from \"../pages/ImageGalleryPage\";\r\nimport { ListItemsForNavigationPage } from \"../pages/ListItemsForNavigationPage\";\r\nimport { MessagePage } from \"../pages/MessagePage\";\r\nimport { NotFoundPage } from \"../pages/NotFoundPage\";\r\nimport { PlayerStatusPage } from \"../pages/PlayerStatusPage\";\r\nimport { RatingPage } from \"../pages/RatingPage\";\r\nimport { TeamsListPage } from \"../pages/TeamsListPage\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path={\"/\"} element={<Navigate to={\"/home\"} />}></Route>\r\n          <Route path={\"/home\"} element={<HomePage />}></Route>\r\n          <Route path={\"/focusable\"} element={<FocusableInputPage />}></Route>\r\n          <Route path={\"/grocery\"} element={<GroceryPage />}></Route>\r\n          <Route path={\"/image-gallery\"} element={<ImageGalleryPage />}></Route>\r\n          <Route\r\n            path={\"/list-items\"}\r\n            element={<ListItemsForNavigationPage />}\r\n          ></Route>\r\n          <Route path={\"/message\"} element={<MessagePage />}></Route>\r\n          <Route path={\"/player-status\"} element={<PlayerStatusPage />}></Route>\r\n          <Route path={\"/rating\"} element={<RatingPage />}></Route>\r\n          <Route path={\"/teams-list\"} element={<TeamsListPage />}></Route>\r\n          <Route path={\"/*\"} element={<NotFoundPage />}></Route>\r\n        </Routes>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <AppRouter />\n    </BrowserRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}